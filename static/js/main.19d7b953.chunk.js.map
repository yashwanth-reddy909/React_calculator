{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","operatestring","setOperatestring","result","setResult","opes","useEffect","indexOf","length","k","i","console","log","result2","join","evaluate","format","precision","result1","err","handleClick","value","prev","toString","className","id","allnumbers","push","onClick","num","map","each","names","filter","class","split","document","getElementById","innerHTML","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.19d7b953.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { evaluate ,format} from 'mathjs';\nfunction App() {\n  const [operatestring,setOperatestring]=useState([]);\n  const [result,setResult]=useState(0);\n  const opes=['.','/','*','+','-'];\n  useEffect(()=>{\n    try{\n      if(opes.indexOf(operatestring[operatestring.length-1])!==-1){\n        let k=[];\n        for(let i=0;i<operatestring.length-1;i++){\n          k=[...k,operatestring[i]]\n        }\n        console.log(k);\n        let result2 = k.join('');\n        result2 = evaluate(result2);\n        result2 = format(result2, { precision: 16 });\n        setResult(result2);\n        return;\n      }\n      let result1 = operatestring.join('');\n      result1 = evaluate(result1);\n      result1 = format(result1, { precision: 16 });\n      setResult(result1);\n    }\n    catch(err){\n    }\n  },[operatestring]);\n  const handleClick=(value)=>{\n    if(opes.indexOf(value)!==-1){\n      if(operatestring){\n        const k=operatestring[operatestring.length-1];\n        if(opes.indexOf(k)===-1){\n          setOperatestring(prev=>[...prev,value.toString()]);\n        }\n        else{\n          return;\n        }\n      }\n      else{\n        return;\n      }\n    }\n    else{\n      setOperatestring(prev=>[...prev,value]);\n    }\n\n\n  }\n  const num=()=>{\n    const allnumbers=[];\n    for(let i=0;i<10;i++){\n      allnumbers.push(<div key={'numbers'+i} className='basicbutton numbutton' onClick={()=>handleClick(i.toString())}>{i}</div>);\n    }\n    return allnumbers;\n  }\n  const equalizeit=()=>{\n    setOperatestring(result.toString().split(''));\n    document.getElementById('dop').innerHTML='';\n  }\n  return (\n    <div className=\"App\">\n      <div className='App-header'>\n        <div className='heading'>React Calculator</div>\n        <div className='resultdiv'>\n          <div>{result!=='undefined' ? <span className='dop' id='dop'>{result}</span>: <span className='dop'>Try me!</span>}<span className='operatestring'>{operatestring.join('')}</span></div>\n        </div>\n        <div>\n        <div className='totalnumbers'>{num()}<div className='basicbutton numbutton dotbutton' onClick={()=>handleClick('.')}>{'.'}</div></div>\n        <div className='totalope'>{opes.map(each=>each==='.' ? '' : (<div key={each+'button'} className='basicbutton opebutton' onClick={()=>handleClick(each)}>{each}</div>))}</div>\n        </div>\n        <div className='lastrow'><div className='lastrowbuttons basicbutton' onClick={()=>{setOperatestring((names) => names.filter((each, i) => i !== names.length - 1))}}><i class=\"bi bi-backspace-fill\"></i></div>\n                                  <div className='lastrowbuttons basicbutton' onClick={()=>{\n                                    setOperatestring([]);\n                                  }}>C</div>\n                                  <div className='lastrowbuttons basicbutton lastone' onClick={equalizeit}>=</div>\n        </div> \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}